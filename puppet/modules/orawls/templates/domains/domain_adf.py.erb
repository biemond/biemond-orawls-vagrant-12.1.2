# load common defs
execfile('utils.py')

WLHOME='<%= @weblogic_home_dir %>'
DOMAIN_PATH='<%= @domain_dir %>'
DOMAIN='<%= @domain_name %>'
<% if @apps_dir %>
APP_PATH='<%= @apps_dir %>/<%= @domain_name %>'
<% end %>

JSSE_ENABLED=<%= @jsse_enabled %>
WEBTIER_ENABLED=<%= @webtier_enabled %>
CUSTOM_IDENTITY_ENABLED=<%= @custom_identity %>
DEVELOPMENT_MODE=<%= @development_mode %>
WEBLOGIC_VERSION=<%= @version %>

ADMIN_SERVER='<%= @adminserver_name %>'
ADMIN_USER='<%= @weblogic_user %>'
ADMIN_PASSWORD='<%= @weblogic_password %>'

JAVA_HOME='<%= @jdk_home_dir %>'

<% if @java_arguments["ADM"] %>
ADM_JAVA_ARGUMENTS='<%= @java_arguments["ADM"] %>'
<% else %>
ADM_JAVA_ARGUMENTS='-XX:PermSize=256m -XX:MaxPermSize=512m -Xms1024m -Xmx1024m -Dweblogic.Stdout=<%= @admin_nodemanager_log_dir %>/<%= @adminserver_name %>.out -Dweblogic.Stderr=<%= @admin_nodemanager_log_dir %>/<%= @adminserver_name %>_err.out'
<% end %>

ADF_REPOS_DBURL='<%= @repository_database_url %>'
ADF_REPOS_DBUSER_PREFIX='<%= @repository_prefix %>'
ADF_REPOS_DBPASSWORD='<%= @repository_password %>'

print('Start...adf domain with template <%= @template %>')
readTemplate('<%= @template %>')

print('Set crossdomain')
setCrossDomain()

cd('/')
print('Set domain log')
changeLog('domain', DOMAIN, '<%= @admin_nodemanager_log_dir %>')

print('Create machine LocalMachine with type UnixMachine')
createMachine('UnixMachine', 'LocalMachine', '<%= @adminserver_address %>')

changeAdminServer(ADMIN_SERVER, 'LocalMachine', '<%= @adminserver_address %>', <%= @adminserver_port %>, ADM_JAVA_ARGUMENTS, JAVA_HOME)

changeSSL(ADMIN_SERVER, JSSE_ENABLED)

if CUSTOM_IDENTITY_ENABLED == true:
  print('Set adminserver custom identity')
  changeCustomIdentityStore(ADMIN_SERVER, '<%= @custom_identity_keystore_filename %>', '<%= @custom_identity_keystore_passphrase %>', '<%= @trust_keystore_file %>', '<%= @trust_keystore_passphrase %>', '<%= @custom_identity_alias %>', '<%= @custom_identity_privatekey_passphrase %>')

print('Change AdminServer log')
changeLog('server', ADMIN_SERVER, '<%= @admin_nodemanager_log_dir %>')

print('Set password...')
setWebLogicPassword(ADMIN_USER, ADMIN_PASSWORD)

<% if @apps_dir %>
setOption( "AppDir", APP_PATH )
<% end %>

if DEVELOPMENT_MODE == true:
  setOption('ServerStartMode', 'dev')
else:
  setOption('ServerStartMode', 'prod')

setOption('JavaHome', JAVA_HOME)

print('write domain...')
# write path + domain name
writeDomain(DOMAIN_PATH)
closeTemplate()

createAdminStartupPropertiesFile(DOMAIN_PATH+'/servers/'+ADMIN_SERVER+'/data/nodemanager',ADM_JAVA_ARGUMENTS)
createBootPropertiesFile(DOMAIN_PATH+'/servers/'+ADMIN_SERVER+'/security','boot.properties',ADMIN_USER,ADMIN_PASSWORD)

es = encrypt(ADMIN_PASSWORD,DOMAIN_PATH)

readDomain(DOMAIN_PATH)

setDomainPassword(DOMAIN,es,ADMIN_USER)

cd('/')

<% if @apps_dir %>
setOption( "AppDir", APP_PATH )
<% end %>

print 'Adding JRF Template'
addTemplate('<%= @templateJRF %>')
print 'Adding EM Template'
addTemplate('<%= @templateEM %>')

dumpStack();

print 'weblogic version' + str(WEBLOGIC_VERSION)

if WEBLOGIC_VERSION == 1212 or WEBLOGIC_VERSION == 1213:

    if WEBTIER_ENABLED == true:
      print 'Adding OHS Template'
      addTemplate('<%= @templateOHS %>')
      #print 'Adding EM WebTier Template'
      #addTemplate('<%= @templateEMWebTier %>')

    print 'Add advanced JAX-WS Template'
    addTemplate('<%= @templateJaxWS %>')
    print 'Add JAX-WS SOAP over JMS Template'
    addTemplate('<%= @templateSoapJms %>')
    print 'Add WSMPM Template'
    addTemplate('<%= @templateWSMPM %>')

    print 'Change datasources'

    print 'Change datasource LocalScvTblDataSource'
    changeDatasource('LocalSvcTblDataSource', ADF_REPOS_DBUSER_PREFIX+'_STB', ADF_REPOS_DBPASSWORD, ADF_REPOS_DBURL)

    print 'Call getDatabaseDefaults which reads the service table'
    getDatabaseDefaults()

    print 'end datasources'

    print 'Add server groups WSM-CACHE-SVR WSMPM-MAN-SVR JRF-MAN-SVR for AdminServer'
    serverGroup = ["WSM-CACHE-SVR" , "WSMPM-MAN-SVR" , "JRF-MAN-SVR"]
    setServerGroups(ADMIN_SERVER, serverGroup)

    print 'end datasources'

dumpStack();
updateDomain()
dumpStack();

closeDomain();

createBootPropertiesFile(DOMAIN_PATH+'/config/nodemanager','nm_password.properties',ADMIN_USER,ADMIN_PASSWORD)

print('Exiting...')
exit()
